"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMeasures = exports.disable = exports.enable = exports.measure = void 0;
//////////////////////////////////////////////////////////////////////
// Submodule for performance measuring
const perf = globalThis.performance;
const measures = {};
let enabled = false;
function measure(name, callback) {
    const t0 = (perf === null || perf === void 0 ? void 0 : perf.now()) || Date.now();
    try {
        const result = callback();
        const t1 = (perf === null || perf === void 0 ? void 0 : perf.now()) || Date.now();
        pushMeasure(name, t0, t1);
        return result;
    }
    catch (err) {
        const t1 = (perf === null || perf === void 0 ? void 0 : perf.now()) || Date.now();
        pushMeasure(name, t0, t1, err);
        throw err;
    }
}
exports.measure = measure;
function pushMeasure(name, t0, t1, detail) {
    if (!enabled)
        return;
    if (!(name in measures))
        measures[name] = [];
    measures[name].push({
        name,
        startTime: t0,
        duration: t1 - t0,
        detail,
    });
}
const enable = () => { enabled = true; };
exports.enable = enable;
const disable = () => { enabled = false; };
exports.disable = disable;
const getMeasures = () => measures;
exports.getMeasures = getMeasures;
