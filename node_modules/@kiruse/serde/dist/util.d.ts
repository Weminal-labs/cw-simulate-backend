export type Global = typeof globalThis;
export type Buffer = Global extends {
    Buffer: infer B;
} ? B extends new (...args: any[]) => infer I ? I : never : never;
export declare function patchSerde<T>(obj: T, protocol: string): T;
export declare function patchSubserde<T>(obj: T, subProtocol: string): T;
export declare const hash: (value: any) => number;
export declare const isArrayLike: (value: any) => value is unknown[];
export declare const isObject: (value: any) => value is object;
